apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: spark-yuriniitsuma
  namespace: spark
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "spark3:latest"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: s3a://spark-artifacts/kafka-read.py
  sparkVersion: "3.1.1"
  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.1.1
    serviceAccount: spark
  dynamicAllocation:
    enabled: true
    initialExecutors: 1
    maxExecutors: 5
    minExecutors: 1
  sparkConf:
    spark.hadoop.fs.s3a.endpoint: http://minio:9000
    spark.hadoop.fs.s3a.access.key: minio
    spark.hadoop.fs.s3a.secret.key: miniominio
    spark.hadoop.fs.s3a.path.style.access: "true"
    spark.hadoop.fs.s3a.impl: org.apache.hadoop.fs.s3a.S3AFileSystem
    spark.sql.extensions: io.delta.sql.DeltaSparkSessionExtension
    spark.sql.catalog.spark_catalog: org.apache.spark.sql.delta.catalog.DeltaCatalog
    # Logs
    # spark.eventLog.enabled: "true"
    # spark.eventLog.dir: s3a://datalake/logs
    # spark.history.provider: org.apache.hadoop.fs.s3a.S3AFileSystem
    # spark.history.fs.logDirectory: s3a://datalake/logs

  executor:
    cores: 1
    instances: 1
    memory: "512m"
    labels:
      version: 3.1.1
